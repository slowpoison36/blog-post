{"version":3,"sources":["img/loading.gif","logo.svg","redux/actions/product-action.js","components/product-list.js","utils/helper.js","redux/actions/auth.js","services/auth.js","components/navbar.js","components/loading.js","components/home.js","components/login.js","components/register.js","services/post.js","components/createblog.js","routes/private-route.js","components/review.js","components/Blog.js","components/notfound.js","routes/routes.js","App.js","serviceWorker.js","redux/reducers/product-reducer.js","redux/reducers/auth.js","redux/reducers/loading.js","index.js","redux/store.js"],"names":["module","exports","__webpack_require__","p","getProducts","dispatch","fetch","then","response","json","data","type","product","arguments","length","undefined","getAllProducts","ProductList","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","style","marginTop","height","post","title","value","author","userName","charAt","toUpperCase","substring","description","NavLink","to","concat","_id","React","Component","login","LoginService","_React$Component","_getPrototypeOf2","_this","_len","args","Array","_key","apply","loginEndpoint","inherits","createClass","key","loginData","method","body","JSON","stringify","headers","Content-Type","res","localStorage","setItem","token","catch","err","userData","resetInfo","getItem","isExpired","decode","exp","Date","now","console","log","removeItem","Navbar","state","isLoggedIn","keys","user","firstName","lastName","nextProp","setState","_this2","_this$state","activeClassName","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","logout","history","push","connect","Loading","loading","src","img","alt","Home","componentWillMount","products","components_loading","map","po","product_list","auth","Login","resetPassword","handleSubmit","event","preventDefault","loginService","_this$props","values","setSubmitting","setFieldError","_this$props2","errors","touched","isSubmitting","formik_esm","name","onSubmit","placeholder","password","disabled","LoginFormik","withFormik","mapPropsToValues","_ref","username","newPassword","validationSchema","Yup","shape","required","min","url","RegisterForm","email","address","city","country","_ref2","rest","objectWithoutProperties","register","regiter","htmlFor","width","component","ajaxService","reqHeaders","Content-type","metaData","assign","AddReview","postId","reviewerId","getPostComments","pageNum","perPage","deleteComment","commentId","createBlogFormik","postData","esm_extends","Route","Redirect","Review","componentDidMount","getAllComments","window","addEventListener","handleScroll","scrolling","totalPage","pageOffset","pageYOffset","innerHeight","el","document","querySelector","Math","round","getBoundingClientRect","top","documentElement","scrollTop","clientHeight","loadMore","prevState","showReview","show","productId","resetForm","comments","comment","toConsumableArray","reviews","total","deleteReview","commentIdx","filter","userId","fontSize","fontWeight","fontFamily","padding","row","resize","color","bind","moment","created","format","authorName","reviewForm","Blog","blogId","match","params","blog","eachPost","href","textTransform","review","getBlog","getSinglePost","NotFound","createHistory","userInfo","Router","navbar","Switch","path","exact","Register","private_route","CreateBlog","Boolean","location","hostname","defaultState","success","message","ProductReducer","action","objectSpread","AuthReducer","loadingReducer","isLoading","store","createStore","combineReducers","productReducer","loader","applyMiddleware","thunk","reduxStore","jsx","es","routes","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2e01f97.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.56e512fd.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\n\r\nconst getAllProducts = (product = {}) => ({\r\n    type: \"ALLPRODUCT\",\r\n    product\r\n\r\n})\r\n\r\nconst getBlog = (blog = {}) => ({\r\n    type: \"BLOG\",\r\n    blog\r\n})\r\n\r\nexport const getProducts = () => {\r\n    return (dispatch) => {\r\n        return fetch(\"http://localhost:7000/api/products\")\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                dispatch(getAllProducts(data))\r\n            })\r\n    }\r\n}\r\nexport const getSinglePost = (id) => {\r\n    return (dispatch) => {\r\n        return fetch(\"/api/product/\" + id)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                dispatch(getBlog(data));\r\n            })\r\n    }\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { titlCase } from \"../utils/helper\";\r\n\r\n\r\nclass ProductList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-4\" style={{marginTop:\"10px\"}}>\r\n                <div className=\"card\" style={{height:\"100%\"}}>\r\n                    <div className=\"card-header\">\r\n                        <h3>\r\n                            {this.props.post.title}\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-title\">Author: {titlCase(this.props.post.author.userName)}</p>\r\n                        <p className=\"card-text\">{this.props.post.description.substring(0, 60) + \"...\"}</p>\r\n                        <NavLink to={`/blog/${this.props.post._id}`} className=\"btn btn-link\">Read More</NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductList;","export const titlCase = (value)=>{\r\n   return value && value.charAt(0).toUpperCase() + value.substring(1);\r\n}\r\n\r\nexport const loadConfig = {\r\n    loading:true,\r\n\r\n}\r\n","\r\nexport const login = (data)=>({\r\n    type:\"LOGIN\",\r\n    data\r\n})\r\n\r\nexport const saveUrl  = (url)=>({\r\n    type:\"REDIRECTURL\",\r\n    url\r\n})\r\n","import React from \"react\";\r\nimport decode from \"jwt-decode\";\r\n\r\nexport class LoginService extends React.Component {\r\n    loginEndpoint = \"/api/login\"\r\n\r\n    login(loginData) {\r\n        return fetch(this.loginEndpoint, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(loginData),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                // let token = localStorage.getItem(\"token\");\r\n                // if (!token)\r\n                localStorage.setItem(\"token\", data.token);\r\n                return data;\r\n            })\r\n            .catch(err => {\r\n                return err;\r\n            })\r\n    }\r\n\r\n    register(userData) {\r\n        return fetch(\"/api/register\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(userData),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                if (data['success']) {\r\n                    localStorage.setItem(\"token\", data.token);\r\n                    return data;\r\n                }\r\n            }).catch(err => {\r\n                return err;\r\n            })\r\n    }\r\n\r\n    resetPassword(resetInfo){\r\n        return fetch(\"/api/reset-password\",{\r\n            method:\"PUT\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify(resetInfo)\r\n        }).then(res=>res.json())\r\n          .catch(err=>err)\r\n    }\r\n\r\n    isLoggedIn() {\r\n        try {\r\n            let token = localStorage.getItem(\"token\");\r\n            let decodeToken = token && decode(token);\r\n            let isExpired = (decodeToken.exp < Date.now() / 1000)\r\n            return !!token && !isExpired;\r\n\r\n        } catch (exp) {\r\n            console.log(exp);\r\n        }\r\n    }\r\n\r\n    userDetail() {\r\n        try {\r\n            let token = localStorage.getItem(\"token\");\r\n            let decodeToken = token && decode(token);\r\n            return decodeToken;\r\n\r\n        } catch (exp) {\r\n        }\r\n    }\r\n\r\n    static logout() {\r\n        localStorage.removeItem(\"token\");\r\n    }\r\n\r\n\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { saveUrl } from \"../redux/actions/auth\";\r\nimport { LoginService } from \"../services/auth\";\r\nimport { history } from \"../routes/routes\";\r\n\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userData: this.props.userData\r\n        }\r\n        const { userData } = this.props;\r\n        this.isLoggedIn = userData && !!Object.keys(userData).length;\r\n        this.userName = this.props.userData && this.props.userData.user && `${this.props.userData.user.firstName} ${this.props.userData.user.lastName}`;\r\n        this.state = {\r\n            userData: this.props.userData,\r\n            isLoggedIn: this.isLoggedIn,\r\n            userName: this.userName\r\n        }\r\n        console.log(this.state);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProp) {\r\n        console.log(nextProp);\r\n        const userName = nextProp.userData && nextProp.userData.user && `${nextProp.userData.user.firstName} ${nextProp.userData.user.lastName}`;\r\n        this.setState(() => ({\r\n            userData: nextProp,\r\n            isLoggedIn: nextProp && !!Object.keys(nextProp).length,\r\n            userName: userName\r\n        }))\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { isLoggedIn, userName } = this.state;\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\" activeClassName=\"active\">Blog Post</NavLink>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/\" activeClassName=\"active\">Home <span className=\"sr-only\">(current)</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/blog\" activeClassName=\"active\">Create Blog <span className=\"sr-only\">(current)</span></NavLink>\r\n\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            {!isLoggedIn && <NavLink to=\"/register\" className=\"nav-link\" activeClassName=\"active\">Register</NavLink>}\r\n\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n\r\n                            {!isLoggedIn && <NavLink to=\"/login\" className=\"nav-link\" activeClassName=\"active\">Login</NavLink>\r\n                            }\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"navbar-nav\">\r\n                        {isLoggedIn && <div><span>Welcome {userName}</span> <button className=\"btn btn-sm btn-info\" onClick={() => {\r\n                            LoginService.logout();\r\n                            this.setState(() => ({\r\n                                userData: \"\",\r\n                                isLoggedIn: false,\r\n                                userName: \"\"\r\n\r\n                            }));\r\n                            history.push(\"/\");\r\n                        }}>Logout</button></div>}\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect()(Navbar);","import React from \"react\";\r\n\r\nimport img from \"../img/loading.gif\";\r\n\r\nclass Loading extends React.Component {\r\n   constructor(props){\r\n       super(props);\r\n   }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n               {this.props.loading &&  <img className=\"loading-icon\" src={img} alt=\"loading\" />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Loading;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProducts } from \"../redux/actions/product-action\";\r\nimport ProductList from \"./product-list\";\r\nimport Navbar from \"./navbar\";\r\nimport Loading from \"./loading\";\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        loading: false,\r\n        product: {}\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        this.setState(() => ({ loading: true }));\r\n        this.props.dispatch(getProducts()).then(data => {\r\n            this.setState(() => ({ loading: false }));\r\n            this.setState(() => {\r\n                return {\r\n                    product: this.props.products\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state.loading)\r\n        const list = () => {\r\n            if (this.state.loading) {\r\n                return (\r\n                <div>\r\n                    <Loading />\r\n                    <p>Loading Please wait...</p>\r\n                </div>);\r\n            } else {\r\n                return (this.state.product && this.state.product.post && this.state.product.post.map(po => {\r\n                    return <ProductList key={po._id} post={po} />\r\n                }));\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"jumbotron\">\r\n                            <header>\r\n                                <h1>The Blog Post</h1>\r\n                                <p>Post your own Blog.Search through some of the best blogs posted by hunderds of user. Sign up and start posting today. Share Knowledge and gain knowledge.Its not always complicated,its simple thing we don't solve the right way. Here we have pleanty of blogs where people have figured out the right way. Read them and share yours own.</p>\r\n                            </header>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {list()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStatetoProps = (state) => ({\r\n    products: state.products,\r\n    userData: state.auth\r\n})\r\n\r\nexport default connect(mapStatetoProps, null)(Home);\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withFormik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { LoginService } from \"../services/auth\";\r\nimport { login } from \"../redux/actions/auth\";\r\nimport decode from \"jwt-decode\";\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            resetPassword: false\r\n        }\r\n    }\r\n\r\n    resetPassword = () => {\r\n        this.setState({ resetPassword: true })\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const loginService = new LoginService();\r\n        const { values, setSubmitting, setFieldError } = this.props;\r\n        const { resetPassword } = this.state;\r\n\r\n        if (!resetPassword) {\r\n            debugger;\r\n            setSubmitting(true)\r\n            loginService.login(values).then(data => {\r\n                setSubmitting(false);\r\n                if (!data['success']) {\r\n                    setFieldError(\"login\", data['message']);\r\n                } else {\r\n                    const token = decode(data.token)\r\n                    this.props.dispatch(login(token));\r\n                    // let url = rest.props.url;\r\n                    this.props.history.push(\"/\");\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n        } else {\r\n            setSubmitting(true)\r\n            loginService.resetPassword(values).then((data) => {\r\n                setSubmitting(false)\r\n                if (data['success']) {\r\n                    setFieldError(\"login\", data['message']);\r\n                    this.setState({ resetPassword: false });\r\n                } else {\r\n                    setFieldError(\"login\", data['message']);\r\n\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { resetPassword } = this.state;\r\n        const { errors, touched, isSubmitting } = this.props;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 form\">\r\n                        <h3 className={resetPassword ? \"text-center reset-password\" : \"text-center login\"}>{resetPassword ? \"Reset Password\" : \"Login!\"}</h3>\r\n                        {errors.login && <p className=\"text-danger\">{errors.login}</p>}\r\n                        <Form name=\"login\" onSubmit={this.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <Field type=\"text\" name=\"userName\" placeholder=\"Username\" className=\"form-control\" />\r\n                                {errors.userName && touched.userName && <p className=\"text-danger\">{errors.userName}</p>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n\r\n                                <Field type=\"password\" name={resetPassword ? \"newPassword\" : \"password\"} placeholder={resetPassword ? \"newPassword\" : \"password\"} className=\"form-control\" />\r\n                                {errors.password && touched.password && <p className=\"text-danger\">{errors.password}</p>}\r\n                            </div>\r\n                            <p className=\"clearfix\"><button type=\"button\" className=\"btn btn-link float-right\" onClick={this.resetPassword}>{!resetPassword ? \"Reset Password\" : \"\"}</button></p>\r\n                            <button className={resetPassword ? \"btn btn-block btn-primary\" : \"btn btn-block btn-success\"} disabled={isSubmitting}>{resetPassword ? \"Reset Password\" : \"Login!\"}</button>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst LoginFormik = withFormik({\r\n    mapPropsToValues({ username }) {\r\n        return {\r\n            userName: username || '',\r\n            password: \"\",\r\n            newPassword: \"\"\r\n        }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n        userName: Yup.string().required('User name is required'),\r\n        password: Yup.string().min(4, \"Must be 4 character in length\").required('Password is required'),\r\n    })\r\n\r\n})(Login);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    url: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(LoginFormik);\r\n","import React from \"react\";\r\nimport { withFormik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport decode from \"jwt-decode\";\r\nimport {connect} from \"react-redux\"\r\nimport { LoginService } from \"../services/auth\";\r\nimport { login } from \"../redux/actions/auth\";\r\n\r\nconst Register = ({ errors, touched,...props }) => (\r\n    <div className=\"container\">\r\n       {errors.register && <p className=\"text-danger\">{errors.regiter}</p> }\r\n        <Form name=\"register\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <label htmlFor=\"firstName\">First name</label>\r\n                    <Field type=\"text\" className=\"form-control\" name=\"firstName\" id=\"firstName\" />\r\n                    {errors.firstName && touched.firstName && <div className=\"invalid-feedback\">\r\n                        Valid first name is required.\r\n                </div>}\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <label htmlFor=\"lastName\">Last name</label>\r\n                    <Field type=\"text\" name=\"lastName\" className=\"form-control\" id=\"lastName\" />\r\n                    <div className=\"invalid-feedback\">\r\n                        Valid last name is required.\r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">@</span>\r\n                    </div>\r\n                    <Field type=\"text\" name=\"userName\" className=\"form-control\" id=\"username\" placeholder=\"Username\" />\r\n                    <div className=\"invalid-feedback\" style={{ width: \"100%\" }}>\r\n                        Your username is required.\r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Field type=\"password\" name=\"password\" className=\"form-control\" id=\"password\" />\r\n                <div className=\"invalid-feedback\">\r\n                    Valid last name is required.\r\n                </div>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"email\">Email <span className=\"text-muted\">(Optional)</span></label>\r\n                <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" placeholder=\"you@example.com\" />\r\n                <div className=\"invalid-feedback\">\r\n                    Please enter a valid email address htmlFor shipping updates.\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"address\">Address</label>\r\n                <Field type=\"text\" name=\"address.add1\" className=\"form-control\" id=\"address\" placeholder=\"1234 Main St\" />\r\n                <div className=\"invalid-feedback\">\r\n                    Please enter your shipping address.\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-5 mb-3\">\r\n                    <label htmlFor=\"country\">Country</label>\r\n                    <Field component=\"select\" name=\"address.country\" className=\"custom-select d-block w-100\" id=\"country\" >\r\n                        <option value=\"\">Choose...</option>\r\n                        <option>United States</option>\r\n                    </Field>\r\n                    <div className=\"invalid-feedback\">\r\n                        Please select a valid country.\r\n                </div>\r\n                </div>\r\n                <div className=\"col-md-4 mb-3\">\r\n                    <label htmlFor=\"state\">State</label>\r\n                    <Field component=\"select\" name=\"address.state\" className=\"custom-select d-block w-100\" id=\"state\">\r\n                        <option value=\"\">Choose...</option>\r\n                        <option value=\"CA\">California</option>\r\n                        <option value=\"TX\">Texas</option>\r\n                    </Field>\r\n                    <div className=\"invalid-feedback\">\r\n                        Please provide a valid state.\r\n                </div>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <label htmlFor=\"zip\">City</label>\r\n                    <Field type=\"text\" name=\"address.city\" className=\"form-control\" id=\"zip\" placeholder=\"\" />\r\n                    <div className=\"invalid-feedback\">\r\n                        Zip code required.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n                <button className=\"btn btn-lg btn-primary\">Submit</button>\r\n            </div>\r\n        </Form>\r\n\r\n    </div>\r\n);\r\nconst RegisterForm = withFormik({\r\n    mapPropsToValues(values) {\r\n        return {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            userName: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n            address: {\r\n                city: \"\",\r\n                state: \"\",\r\n                country: \"\"\r\n            }\r\n        }\r\n\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n        firstName: Yup.string().required(\"first name is required\"),\r\n        lastName: Yup.string().required(\"lastName name is required\"),\r\n        userName: Yup.string().required(\"user name is required\"),\r\n        password: Yup.string().min(4, \"Must be atleast four character\").required(\"Password is required\")\r\n    }),\r\n    handleSubmit(values, { setSubmitting, setFieldError, ...rest }) {\r\n        const loginService = new LoginService();\r\n        setSubmitting(true)\r\n        loginService.register(values).then(data => {\r\n            setSubmitting(false);\r\n            if (!data['success']) {\r\n                setFieldError(\"register\", data['message']);\r\n            } else {\r\n                const token = decode(data.token);\r\n                rest.props.dispatch(login(token));\r\n                rest.props.history.push(\"/\");\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n})(Register)\r\n\r\nexport default connect()(RegisterForm);","function ajaxService(url, method, body, loading, securedApi = true) {\r\n    const reqHeaders = {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n    if (securedApi) {\r\n        reqHeaders['authorization'] = localStorage.getItem(\"token\")\r\n    }\r\n    let data = method == \"POST\" || method == \"PUT\"  ? JSON.stringify(body):\"\";\r\n    let headers = Object.assign({}, reqHeaders);\r\n\r\n    let metaData = { method, headers, body: data };\r\n    if (method == \"GET\") delete metaData['body'];\r\n    return fetch(url, metaData).then(res =>{\r\n        return res.json();\r\n    }).catch(err => err);\r\n}\r\n\r\nexport const createPost = (postData,loading) => {\r\n    return ajaxService(\"/api/post\", \"POST\", postData,loading, true);\r\n}\r\n\r\nexport const AddReview = (postId, reviewerId, description,loading) => {\r\n    return ajaxService(`/api/${postId}/review/${reviewerId}`, \"POST\", description,loading);\r\n}\r\n\r\nexport const getPostComments = (postId, pageNum = 0, perPage = 2,loading) => {\r\n\r\n    return ajaxService(`/api/${postId}/reviews?perPage=${perPage}&pageNum=${pageNum}`, \"GET\", null,loading, true)\r\n}\r\n\r\nexport const deleteComment = (commentId) => {\r\n    return ajaxService(`/api/${commentId}`, \"DELETE\", null, true);\r\n\r\n}","import React from \"react\";\r\nimport { Form, Field, withFormik, } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { createPost } from \"../services/post\";\r\n\r\nconst CreateBlog = () => {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <h3>Post your Blog</h3>\r\n                    <Form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <Field type=\"text\" name=\"title\" className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <Field component=\"textarea\" name=\"description\" className=\"form-control\" />\r\n\r\n                        </div>\r\n                        <button className=\"btn btn-block btn-secondary\">Post Blog</button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst createBlogFormik = withFormik({\r\n    mapPropsToValues(values) {\r\n        return {\r\n            title:\"\",\r\n            description:\"\"\r\n        }\r\n\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n\r\n    }),\r\n    handleSubmit(values, {...rest}) {\r\n        createPost(values).then(data => {\r\n            if (data['success'])\r\n                rest.props.history.push(\"/\");\r\n        })\r\n    }\r\n\r\n})(CreateBlog)\r\n\r\nexport default createBlogFormik;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { LoginService } from \"../services/auth\";\r\n\r\nconst PrivateRoutes = ({ isLoggedIn, component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} component={(props) => (\r\n            new LoginService().isLoggedIn() ? (\r\n                <div>\r\n                    <Component {...props} />\r\n                </div>\r\n            ) :\r\n                (\r\n                    <div>\r\n                        <Redirect to=\"/login\" />\r\n                    </div>\r\n                )\r\n        )} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.auth && state.auth.user && !!state.auth.user._id\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(PrivateRoutes);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport decode from \"jwt-decode\";\r\nimport { withFormik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { AddReview, getPostComments, deleteComment } from \"../services/post\";\r\nimport * as moment from \"moment\";\r\nimport { LoginService } from \"../services/auth\";\r\nimport { history } from \"../routes/routes\";\r\nimport Loading from \"./loading\";\r\n\r\nclass Review extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.userId = props.userId;\r\n        this.reviewerId = props.reviewerId\r\n        this.state = {\r\n            show: false,\r\n            comments: [],\r\n            pageNum: 0,\r\n            scrolling: false,\r\n            totalPage: 0,\r\n            loading:false\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.getAllComments();\r\n        window.addEventListener(\"scroll\", this.handleScroll);\r\n    }\r\n    handleScroll = (event) => {\r\n        const { scrolling, totalPage, pageNum } = this.state;\r\n        if (scrolling) return;\r\n        if (pageNum >= totalPage) return;\r\n        let pageOffset = window.pageYOffset + window.innerHeight;\r\n        let el = document.querySelector(\"li.list-group-item:last-child\");\r\n        if (el) {\r\n            let elOffset = Math.round(el.getBoundingClientRect().top + document.documentElement.scrollTop + el.clientHeight);\r\n            if (pageOffset > elOffset) this.loadMore();\r\n        }\r\n    }\r\n\r\n    loadMore = () => {\r\n        this.setState(prevState => ({\r\n            scrolling: true,\r\n            pageNum: prevState.pageNum + 1\r\n        }), this.getAllComments);\r\n    }\r\n\r\n    showReview = () => {\r\n        let isLoggedIn = new LoginService().isLoggedIn();\r\n        if (!isLoggedIn) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            this.setState(() => {\r\n                return {\r\n                    show: !this.state.show\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        const { productId, reviewerId, values, setFieldError, resetForm } = this.props;\r\n        event.preventDefault();\r\n        this.setState({loading:true})\r\n        AddReview(productId, reviewerId, values,this.state.loading).then(data => {\r\n            if (!data['success']) {\r\n                setFieldError(\"description\", data['message']);\r\n            } else {\r\n                resetForm();\r\n                this.setState((prevState) => ({ \r\n                    comments:[data.comment,...prevState.comments],\r\n                    show: false ,\r\n                    loading:false}));\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n    getAllComments = () => {\r\n        const { productId } = this.props;\r\n        const { pageNum } = this.state;\r\n        this.setState({loading:true});\r\n        getPostComments(productId, pageNum,this.state.loading).then(data => {\r\n            if (data['success']) {\r\n                this.setState((prevState) => ({\r\n                    comments: [...prevState.comments, ...data.reviews],\r\n                    scrolling: false,\r\n                    totalPage: data.total,\r\n                    loading:false\r\n                }))\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    deleteReview = (comment) => {\r\n        let commentIdx = comment._id;\r\n        deleteComment(comment._id).then((data) => {\r\n            if (data['success']) {\r\n                this.setState(prevState => ({\r\n                    comments: prevState.comments.filter(comment => comment._id !== commentIdx)\r\n                }))\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { errors, touched } = this.props;\r\n        return (\r\n            <div className=\"container\">\r\n            <Loading loading={this.state.loading}/>\r\n                <div className=\"row\">\r\n                    <a className=\"btn btn-link text-info\" style={{ fontSize: \"15px\", fontWeight: \"600\", fontFamily: \"monospace\" }} onClick={this.showReview}>Add Review</a>\r\n                </div>\r\n                {this.state.show &&\r\n                    (<div className=\"row\">\r\n                        <div className=\"col-8\" style={{ padding: \"0\" }}>\r\n                            {errors.description && touched.description && <p className=\"text-danger\">{errors.description}</p>}\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <Field component=\"textarea\" name=\"description\" placeholder=\"Your Comments\" className=\"form-control\" row=\"30\" style={{ resize: \"none\" }} />\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <button className=\"btn btn-outline-secondary\">Post Comment</button>\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n\r\n                    </div>)\r\n                }\r\n                {this.state.comments.length ? (\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-sm\" style={{ padding: \"0\" }}>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header bg-info\">\r\n                                    <h5 style={{ color: \"white\" }}>Comments:</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"list-group\">\r\n                                        {this.state.comments.map(comment => {\r\n                                            return (\r\n                                                <li key={comment._id} className=\"list-group-item mb-2\">\r\n                                                    <p className=\"card-text clearfix\">\r\n                                                        {comment.description}\r\n                                                        {comment.author == this.reviewerId && <button className=\"btn btn-sm btn-danger float-right\" onClick={this.deleteReview.bind(this, comment)}>Delete</button>}\r\n                                                    </p>\r\n                                                    <p className=\"float-right\" style={{ color: \"lightseagreen\" }}><em>On {moment(comment.created).format(\"MM/DD/YYYY hh:mm a\")} By {comment.authorName}</em></p>\r\n                                                </li>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                        <h4>No comments on this Post Yet</h4>\r\n\r\n                    )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    reviewerId: state.auth.user && state.auth.user._id || localStorage.getItem(\"token\") && decode(localStorage.getItem(\"token\")).user._id\r\n});\r\n\r\nconst reviewForm = withFormik({\r\n    mapPropsToValues(values) {\r\n        return {\r\n            description: \"\"\r\n        }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n        description: Yup.string().required(\"Please add some comments\")\r\n    }),\r\n    // handleSubmit(values,props) {\r\n    //     console.log(props);\r\n    // }\r\n})(Review)\r\n\r\nexport default connect(mapStateToProps)(reviewForm);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as moment from \"moment\";\r\nimport { getSinglePost } from \"../redux/actions/product-action\";\r\nimport Review from \"./review\";\r\nimport Loading from \"../components/loading\";\r\nimport { loadConfig } from \"../utils/helper\";\r\n\r\n\r\nclass Blog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading:false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({loading:true})\r\n        const blogId = this.props.match.params.id;\r\n        this.props.blog(blogId).then(data => {\r\n            this.setState({loading:false})\r\n        })\r\n    }\r\n    render() {\r\n        const { post } = this.props.eachPost;\r\n        return (\r\n            <div className=\"container\" style={{ marginTop: \"2%\" }}>\r\n                {this.state.loading && <Loading />}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"card text-center\">\r\n                            <div className=\"card-header\">\r\n                                <h5 className=\"card-title\">{post.title}</h5>\r\n\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <p className=\"card-text\">{post.description}</p>\r\n                            </div>\r\n                            <div className=\"card-footer text-muted\">\r\n                                <em>Created On: {moment(post.created).format(\"MM/DD/YYYY\")}</em>\r\n                                <div className=\"text-right\">\r\n                                    <a href=\"#\" className=\"link link-danger\" style={{ textTransform: \"capitalize\" }}>{`${post.author && post.author.userName}'s Profile`}</a>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Review productId={this.props.match.params.id} userId={post.author && post.author._id} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProp = (state) => ({\r\n    eachPost: state.products\r\n})\r\nconst mapPropsToDispatch = (dispatch) => ({\r\n    blog: (id) => dispatch(getSinglePost(id))\r\n})\r\nexport default connect(mapStateToProp, mapPropsToDispatch)(Blog);","import React from \"react\";\r\n\r\nconst NotFound = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    This page is not availabe\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport {Router, Switch, Route ,Redirect} from \"react-router-dom\";\r\nimport createHistory from \"history/createBrowserHistory\";\r\nimport Home from \"../components/home\";\r\nimport Navbar from \"../components/navbar\";\r\nimport Login from \"../components/login\";\r\nimport Register from \"../components/register\";\r\nimport CreateBlog from \"../components/createblog\";\r\nimport PrivateRoute from \"./private-route\";\r\nimport {connect} from \"react-redux\";\r\nimport decode from \"jwt-decode\";\r\nimport Blog from \"../components/Blog\";\r\nimport NotFound from \"../components/notfound\";\r\n\r\nexport const history = createHistory();\r\n\r\nconst AppRoutes = (props) => {\r\n    let userInfo = !!!(Object.keys(props.userData).length) ? !!localStorage.getItem(\"token\") && decode(localStorage.getItem(\"token\")): props.userData;\r\n    console.log(userInfo);\r\n    return (\r\n        <Router history={history}>\r\n            <div>\r\n                <Navbar  userData = {userInfo}/>\r\n                <Switch>\r\n                    <Route path=\"/\" component={Home} exact />\r\n                    <Route path=\"/register\" component={Register} />\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <PrivateRoute path=\"/blog\" component ={CreateBlog} exact/>\r\n                    <Route path=\"/blog/:id\" component = {Blog} exact/>\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nconst mapStateToprops = (state)=>({\r\n    userData:state.auth\r\n})\r\nexport default connect(mapStateToprops)(AppRoutes);","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport AppRoutes from './routes/routes';\n\nclass App extends Component {\n  render() {\n     return (\n      <div>\n      <AppRoutes/> \n\n    </div>\n     )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst defaultState = {success:false,message:\"\",post:[]};\r\n\r\nconst ProductReducer = (state = defaultState, action)=>{\r\n    debugger;\r\n      switch(action.type){\r\n          case \"ALLPRODUCT\":\r\n           return {\r\n               ...state,\r\n               ...action.product\r\n           }\r\n          case \"BLOG\":\r\n             return {\r\n                 ...action.blog\r\n             }\r\n           default:\r\n              return state;\r\n      }\r\n}\r\n\r\nexport default ProductReducer;","// import decode from \"jwt-decode\";\r\n// const initState = decode(localStorage.getItem(\"token\"));\r\n\r\n\r\nconst AuthReducer = (state={},action)=>{\r\n    debugger;\r\n    switch(action.type){\r\n        case \"LOGIN\":\r\n           return {\r\n            ...state,\r\n            ...action.data\r\n           }\r\n\r\n        case \"REDIRECTURL\":\r\n            return action.url;\r\n\r\n         default: \r\n            return state;  \r\n    }\r\n}\r\n\r\nexport default AuthReducer;","\r\nexport const loadingReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return action.isLoading;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport AppRoutes from './routes/routes';\nimport reduxStore from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\nconst store = reduxStore();\n const jsx = (\n     <Provider store={store}>\n         <AppRoutes />\n     </Provider>\n )\n\nReactDOM.render(jsx, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore,combineReducers,applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport productReducer from \"./reducers/product-reducer\";\r\nimport AuthReducer from \"./reducers/auth\";\r\nimport {loadingReducer} from \"./reducers/loading\";\r\n\r\nconst store = function(){\r\n    return createStore(\r\n        combineReducers({\r\n            products:productReducer,\r\n            auth:AuthReducer,\r\n            loader:loadingReducer\r\n        }),\r\n        applyMiddleware(thunk)\r\n    )\r\n}\r\n\r\nexport default store;"],"sourceRoot":""}